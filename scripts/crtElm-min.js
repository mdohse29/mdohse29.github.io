function mkDiv(e={}){return e.elemType="div",mkElem(e)}function mkSpan(e={}){return e.elemType="span",mkElem(e)}function mkP(e={}){return e.elemType="p",mkElem(e)}function mkLnk(e={}){return e.elemType="a",mkElem(e)}function mkLabel(e={}){return e.elemType="label",mkElem(e)}function mkBtn(e={}){return e.elemType="button",mkElem(e)}function mkOpt(e={value:""}){let t=mkElem({elemType:"option"});if(!e.value)throw Error("A value key must be set\nmkOpt({value:'some value'})\n\nCurrent Keys: {"+Object.keys(e)+"}");if(e.isColor)t.value=e.value,t.innerText=e.value[0].toUpperCase()+e.value.substring(1),t.classList.add(e.value);else if(Object.keys(e).length>1)for(let l in e)l.includes("inner")?t.innerText=e[l]:e[l]&&t.setAttribute(l,e[l]);else t.value=e.value.toLowerCase(),t.innerText=e.value;return t}function mkInp(e={type:"",id:""}){let t={};if(!e.type)throw Error("A input type must be defined.\n\nExample: {type: 'text'}\n\nCurrent Keys: {"+Object.keys(e)+"}");if(!e.id&&e.label)throw Error("\n*******************\nThe id attribute should be set if using a label so the label can be properly associated to the element.\n*******************\n");switch(e.type){case"select":t.input=mkElem({elemType:e.type});for(let l in e)!l.match(/options|listeners|label/)&&e[l]&&t.input.setAttribute(l,e[l]);for(let l of e.options)t.input.appendChild(mkOpt(l));break;default:t.input=mkElem({elemType:"input"});for(let l in e)l.includes("inner")?t.input.innerHTML=e[l]:!l.match(/options|listeners|label/)&&e[l]&&t.input.setAttribute(l,e[l]);break}if(e.label&&(e.labelOpt?t.label=mkLabel({for:e.id,inner:e.label,...e.labelOpt}):t.label=mkLabel({for:e.id,inner:e.label})),e.listeners)for(let l of e.listeners)t.input.addEventListener(l.type,l.execute);return t.label?t:t.input}function tgPillListen(e){let t=this.querySelector(".toggle-pill"),l=this,n=l.parentElement.parentElement,i=l.scrollWidth-(t.scrollWidth+4),r=n.getAttribute("isLocked");l.classList.contains("tg-on")?n.hasAttribute("isLocked")&&"false"!=r?e.ctrlKey&&(l.removeAttribute("style"),n.setAttribute("isLocked","false")):e.ctrlKey&&"false"==r?(n.setAttribute("isLocked","true"),l.style.backgroundColor="red"):(t.style.setProperty("margin-left","2px"),l.classList.remove("tg-on")):(t.style.setProperty("margin-left",i+"px"),l.classList.add("tg-on"),e.ctrlKey&&"false"==r&&(n.setAttribute("isLocked","true"),l.style.backgroundColor="red"))}function tgLblListen(e){let t=this.parentElement,l=t.getAttribute("isLocked");e.ctrlKey&&"false"==l?(t.setAttribute("isLocked","true"),t.querySelector(".toggle-cont").style.backgroundColor="red",this.parentElement.children[1].children[0].children[0].click()):e.ctrlKey&&"true"==l?(t.querySelector(".toggle-cont").removeAttribute("style"),t.setAttribute("isLocked","false")):(!e.ctrlKey||e.ctrlKey&&!t.hasAttribute("isLocked"))&&this.parentElement.children[1].children[0].children[0].click()}function createToggle(e={id:"",title:"",label:"",isLocked:!1}){return nestElem([mkDiv({id:e.id,class:e.class?"switch-container "+e.class:"switch-container",title:e.title,isLocked:e.isLocked}),{1:mkLabel({inner:e.label?e.label:"",listeners:[{type:"click",execute:tgLblListen}]}),2:nestElem([mkDiv({class:"switch"}),mkDiv({class:"toggle-cont",listeners:[{type:"click",execute:tgPillListen}]}),mkDiv({class:"toggle-pill"})])}])}function crtSpin(){return nestElem([mkDiv({class:"spinner-background"}),mkDiv({class:"spinner-border",role:"status"}),mkSpan({class:"visually-hidden",inner:"Loading..."})])}function nestElem(e=[]){for(let t=e.length-2;t>=0;t--)if(Object.keys(e[t+1]).length>0)for(let l in e[t+1])e[t].appendChild(e[t+1][l]);else e[t].appendChild(e[t+1]);return e[0]}function mkElem(e={elemType:""}){if(!e.elemType)throw new Error("You must specify what type of element to create\nmkElem({elemType:''})");let t=document.createElement(e.elemType);for(let l in e)if(l.includes("inner"))t.innerHTML=e[l];else if(l.includes("listeners")){if(e[l].length)for(let n of e[l])t.addEventListener(n.type,n.execute)}else e[l]&&!l.includes("elemType")&&t.setAttribute(l,e[l]);return t}